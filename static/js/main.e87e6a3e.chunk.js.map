{"version":3,"sources":["styles/homepage.module.css","styles/illustration.module.css","styles/Layout.module.css","asset/first_circle_illustration.svg","asset/second_circle_illustration.svg","asset/logo.jpeg","components/Illustration.js","containers/homepage.js","components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Illustration","props","className","styles","illustrationContainer","src","svg","alt","illustration","contentContainer","illustrationTitle","title","illustrationContent","content","Homepage","wrapper","container","mainTitle","subTitle","illustrationWrapper","FirstIllustration","SecondIllustration","Layout","head","logo","navbar","children","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sFACAA,EAAOC,QAAU,CAAC,QAAU,0BAA0B,UAAY,4BAA4B,UAAY,4BAA4B,SAAW,2BAA2B,oBAAsB,wC,gBCAlMD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,kBAAoB,wCAAwC,oBAAsB,0CAA0C,sBAAwB,4CAA4C,iBAAmB,yC,gBCAvRD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,KAAO,qBAAqB,UAAY,0BAA0B,OAAS,yB,kBCDzHD,EAAOC,QAAU,IAA0B,uD,gBCA3CD,EAAOC,QAAU,IAA0B,wD,yFCA3CD,EAAOC,QAAU,IAA0B,mC,sHCgB5BC,EAZM,SAACC,GACpB,OACE,yBAAKC,UAAWC,IAAOC,uBACrB,yBAAKC,IAAKJ,EAAMK,IAAKC,IAAI,QAAQL,UAAWC,IAAOK,eACnD,yBAAKN,UAAWC,IAAOM,kBACrB,wBAAIP,UAAWC,IAAOO,mBAAoBT,EAAMU,OAChD,uBAAGT,UAAWC,IAAOS,qBAAsBX,EAAMY,Y,gCCuB1CC,EA1BE,SAACb,GAChB,OACE,yBAAKC,UAAWC,IAAOY,SACrB,yBAAKb,UAAWC,IAAOa,WACrB,wBAAId,UAAWC,IAAOc,WAAtB,8BACA,wBAAIf,UAAWC,IAAOe,UAAtB,qFAKF,yBAAKhB,UAAWC,IAAOgB,qBACrB,kBAAC,EAAD,CACEb,IAAKc,IACLT,MAAM,4CACNE,QAAQ,2FAEV,kBAAC,EAAD,CACEP,IAAKe,IACLV,MAAM,0CACNE,QAAQ,uD,gBCLHS,G,MAjBA,SAACrB,GACd,OACE,oCACE,4BAAQC,UAAWC,IAAOoB,MACxB,yBAAKrB,UAAWC,IAAOqB,OACvB,yBAAKtB,UAAWC,IAAOsB,QACrB,wCACA,iDACA,+CACA,2CAGHxB,EAAMyB,YCFEC,MAVf,WACE,OACE,yBAAKzB,UAAU,OACb,kBAAC,EAAD,KACE,kBAAC,EAAD,SCIY0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.e87e6a3e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"homepage_wrapper__2-RzV\",\"container\":\"homepage_container__1a9Ic\",\"mainTitle\":\"homepage_mainTitle__T21zN\",\"subTitle\":\"homepage_subTitle__1K_RZ\",\"illustrationWrapper\":\"homepage_illustrationWrapper__16NXl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"illustration\":\"illustration_illustration__1jFR-\",\"illustrationTitle\":\"illustration_illustrationTitle__3N4Ww\",\"illustrationContent\":\"illustration_illustrationContent__8ArK4\",\"illustrationContainer\":\"illustration_illustrationContainer__kUYTA\",\"contentContainer\":\"illustration_contentContainer__2F9Pl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"Layout_head__1JWOz\",\"logo\":\"Layout_logo__Qo8jw\",\"logoImage\":\"Layout_logoImage__8XwpX\",\"navbar\":\"Layout_navbar__inPHH\"};","module.exports = __webpack_public_path__ + \"static/media/first_circle_illustration.9d1acbed.svg\";","module.exports = __webpack_public_path__ + \"static/media/second_circle_illustration.18a63887.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5b92220d.jpeg\";","import React from \"react\";\n\nimport styles from \"../styles/illustration.module.css\";\n\nconst Illustration = (props) => {\n  return (\n    <div className={styles.illustrationContainer}>\n      <img src={props.svg} alt=\"peace\" className={styles.illustration} />\n      <div className={styles.contentContainer}>\n        <h2 className={styles.illustrationTitle}>{props.title}</h2>\n        <p className={styles.illustrationContent}>{props.content}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Illustration;\n","import React from \"react\";\nimport styles from \"../styles/homepage.module.css\";\n\nimport Illustration from \"../components/Illustration\";\nimport FirstIllustration from \"../asset/first_circle_illustration.svg\";\nimport SecondIllustration from \"../asset/second_circle_illustration.svg\";\n\nconst Homepage = (props) => {\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.container}>\n        <h1 className={styles.mainTitle}>Free mental health support</h1>\n        <h3 className={styles.subTitle}>\n          No matter what's troubling you, get the support you need, right here,\n          right now.\n        </h3>\n      </div>\n      <div className={styles.illustrationWrapper}>\n        <Illustration\n          svg={FirstIllustration}\n          title=\"Ready to tap into your most awesome self?\"\n          content=\"Learn to deal with everything from stress to sleep,Understand the cause of the problem\"\n        />\n        <Illustration\n          svg={SecondIllustration}\n          title=\"The help you need, right in your pocket\"\n          content=\"Reaching out for help doesn't mean you are weak\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Homepage;\n","import React from \"react\";\nimport styles from \"../styles/Layout.module.css\";\nimport Logo from \"../asset/logo.jpeg\";\n// <img src={Logo} alt=\"Findhope\" className={styles.logoImage} />\nconst Layout = (props) => {\n  return (\n    <>\n      <header className={styles.head}>\n        <div className={styles.logo}></div>\n        <nav className={styles.navbar}>\n          <div>Hompage</div>\n          <div>Peer Councelling</div>\n          <div>Youth Advocate</div>\n          <div>About us</div>\n        </nav>\n      </header>\n      {props.children}\n    </>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport \"./App.css\";\nimport Homepage from \"./containers/homepage\";\nimport Layout from \"./components/Layout\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Homepage />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}